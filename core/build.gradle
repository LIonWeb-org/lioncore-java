plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    // Required for MPS OpenAPI and Modelix's Model API
    maven {
        url 'https://artifacts.itemis.cloud/repository/maven-mps/'
    }
}

configurations {
    javadocConfig.extendsFrom testImplementation
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    javadocConfig 'org.eclipse.emf:org.eclipse.emf.ecore:2.28.0'

    // Please note that this forces us to use Java 11 for the javadoc tasks
    // unfortunately earlier version of these libraries, which were compatible with Java 8, are not available
    // on Maven
    javadocConfig 'com.jetbrains:mps-openapi:2021.3.1'

    javadocConfig 'org.modelix:model-api:1.3.2'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    implementation group: 'com.networknt', name: 'json-schema-validator', version: '1.0.77'
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.javadocConfig
    options {
        links 'https://docs.oracle.com/javase/8/docs/api/'
        links 'https://download.eclipse.org/modeling/emf/emf/javadoc/2.10.0/'
        links 'https://alexanderpann.github.io/mps-openapi-doc/javadoc_2021.2/'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.lionweb.lioncore-java'
            artifactId = 'core'
            version = lioncore_java_version

            from components.java
        }
    }
}

tasks.withType(JavaCompile) {
    options.release = 8
}
